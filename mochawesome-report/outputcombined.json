{
    "stats": {
      "suites": 9,
      "tests": 30,
      "passes": 27,
      "pending": 2,
      "failures": 1,
      "start": "2019-05-10T20:23:31.803Z",
      "end": "2019-05-10T20:23:31.803Z",
      "duration": 1444182,
      "testsRegistered": 30,
      "passPercent": 90,
      "pendingPercent": 6.666666666666667,
      "other": 0,
      "hasOther": false,
      "skipped": 0,
      "hasSkipped": false,
      "passPercentClass": "warning",
      "pendingPercentClass": "danger"
    },
    "suites": {
      "uuid": "af3d101f-b266-4a68-8cd6-cab9c969b9bd",
      "tests": [],
      "suites": [
        {
          "uuid": "c3839ca5-9a19-4981-895a-3f69810a64e3",
          "title": "Asset should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset creation: To verify user able to create using customized template",
              "fullTitle": "Asset should  Asset creation: To verify user able to create using customized template",
              "duration": 71650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "//Create SiteRoot\ncy.wait(_locators.default.shortWait);\ncy.get('.module.content').should('be.visible').click({\n  force: true\n});\ncy.wait(5000); //Open File Menu and check New->Sub menu items are displaying\ncy.get('div[title=\\'Content\\']').click();\nMenuPageObject.clickMenuItem(menuItem);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('New').trigger('mouseover').should('be.visible');\ncy.wait(2000);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').trigger('mousemove');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').click({\n  force: true\n});\ncy.log('**The Create Site Root prompt should come up.**');\ncy.get('p-header').should('have.text', 'Create Site Root ');\ncy.log('**Enter New site root name in textbox**');\ncy.get('#siteRootInput').should('be.visible').trigger('click');\ncy.log('**Text should be in the text box.**');\ncy.get('#siteRootInput').type(siteRootName);\ncy.log('**Click on Install Component Project using Component Library 2.1 checkbox**');\ncy.get('div.checkbox').should('be.visible');\ncy.get('div.checkbox').children('label').should('have.text', 'Install Component Project using Component Library 2.1');\ncy.get('div.checkbox').click();\ncy.log('**A check mark should appear in the box and two more options should appear**');\ncy.get('.checkbox.ng-star-inserted').should('have.length', 2);\ncy.get('.checkbox.ng-star-inserted > label').first().should('have.text', 'Install Samples');\ncy.get('.checkbox.ng-star-inserted > label').first().children('input').should('be.checked');\ncy.get('.checkbox.ng-star-inserted > label').last().should('have.text', 'Rebuild Site After Creation ');\ncy.get('.checkbox.ng-star-inserted > label').last().children('input').should('be.checked');\ncy.log('**Click on save button**');\ncy.get('.ui-dialog-footer').should('be.visible').children('p-footer').children('button').last().click({\n  force: true\n});\ncy.log('**A notification should come up stating that the Site Root is created.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created site root ' + siteRootName + '.'); //Search for created SiteRoot and open it\ncy.get('[ng-click=\"vm.toggleSearchDropdown(true)\"] > cp-svg').click();\ncy.get('[placeholder=\"Label\"]').click();\ncy.get('[placeholder=\"Label\"]').clear();\ncy.get('[placeholder=\"Label\"]').type(siteRootName);\ncy.get('.btn-primary').click();\ncy.wait(2000);\ncy.get('div.assetRow.ng-scope').contains(siteRootName).should('be.visible');\ncy.wait(3000);\ncy.get('div.assetRow.ng-scope').contains(siteRootName).trigger('dblclick');\ncy.wait(2000);\ncy.log('The folder should open and display _Assets, _Site Confi, Component Project folders and a Demo Page and Page assets.');\ncy.get('.assetLabelLink.ng-binding').contains('_Assets').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('_Site Config').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Component Project').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Demo Page').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Page').should('be.visible');\ncy.log('The folder should open and display _Assets, _Site Confi, Component Project folders and a Demo Page and Page assets.');\ncy.get('.assetLabelLink.ng-binding').contains('_Assets').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('_Site Config').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Component Project').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Demo Page').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Page').should('be.visible');\ncy.log('**Action: Double click on Component folder**');\ncy.get('.assetLabelLink.ng-binding').contains('Component Project').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Component Project').trigger('dblclick');\ncy.wait(5000);\ncy.log('**Component Project folder should open and display: Component Library, Filenames, Library, Models, Templates, Workflows folders.**');\ncy.get('.assetLabelLink.ng-binding').contains('Component Library').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Filenames').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Library').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Models').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Templates').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Workflows').should('be.visible');\ncy.log('**Action: Double click on Templates folder**');\ncy.get('.assetLabelLink.ng-binding').contains('Templates').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Templates').trigger('dblclick');\ncy.wait(5000);\ncy.log('**Templates folder should open with various folders.**');\ncy.get('.assetLabelLink.ng-binding').contains('Component Framework').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun v3 No Footer Template').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun v3 Template').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun v3 Template - Modified').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun v3 Template - Zones').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun Wrapper').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Summer of Fun Wrapper No Footer').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('wysiwyg image test template').should('be.visible');\ncy.log('**Goto File >>New >> click on Template**');\nMenuPageObject.clickMenuItem(menuItem);\nMenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Template').trigger('mousemove').trigger('click');\ncy.log('**The Create Template prompt should come up.**');\ncy.get('p-header').should('have.text', 'Create Template ');\ncy.log('**Enter a new template name in text box**');\ncy.log('**Click on create**');\ncy.get('.control-label').should('have.text', 'Enter a new template name');\ncy.get('#projectInput').should('be.visible').trigger('click');\ncy.log('**Text should be in the text box.**');\ncy.get('#projectInput').type(templateFolderName);\ncy.get('.ui-dialog-footer').should('be.visible').children('p-footer').children('button').last().click({\n  force: true\n});\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created ' + templateFolderName + '.');\ncy.wait(5000);\ncy.log('**Action: Double click on newly created Template folder**');\ncy.get('.assetLabelLink.ng-binding').contains(templateFolderName).should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains(templateFolderName).trigger('dblclick');\ncy.wait(5000);\ncy.log('**input.aspx and output.aspx folder should be present.**');\ncy.get('.assetLabelLink.ng-binding').contains('input.aspx').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('output.aspx').should('be.visible'); // cy.log(\"Action: Double click on input.aspx file**\");\n// cy.get('.assetLabelLink.ng-binding').contains('input.aspx').trigger('dblclick');\n// cy.log(\"**Input.aspx should open.**\");\n// cy.get('.background > .ng-binding').should('have.text', 'input.aspx');\n// cy.wait(10000);\n// //Input code in Input.aspx\n// cy.log(\"**Open Input.aspx and insert code **\");\n// cy.get(':nth-child(5) > .CodeMirror-line > [role=\"presentation\"]').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(InputchangeExisting);\n//     cy.wait(3000)\n// });\n// cy.get('div:nth-child(9) pre.CodeMirror-line span:nth-child(1) > span.cm-comment').then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(inputCode);\n//     cy.wait(3000)\n// });\n// //Save Input.aspx and validate the toast message    \n// cy.log(\"**Validate Input.aspx Toast Message **\");\n// cy.get('#contentModuleSave').click();\n// cy.get(Constants.elementNotificationMessage).should('have.text', 'Compilation SucceededSaved asset(s)');\n// //Close Input.aspx\n// cy.log(\"**Close Input.aspx File **\");\n// cy.get('button.tabCloseButton').click({ force: true })\n// //Double click and open Output.aspx\n// cy.log(\"Action: Double click on input.aspx file**\");\n// cy.get('.assetLabelLink.ng-binding').contains('output.aspx').trigger('dblclick');\n// // Open Output.aspx file\n// cy.log(\"**Output.aspx should open.**\");\n// cy.wait(3000)\n// cy.get('.background > .ng-binding').should('have.text', 'output.aspx');\n// cy.wait(10000);\n// //Insert code in Output.aspx\n// cy.log(\"**Open Output.aspx and insert drag and drop code **\");\n// cy.get(':nth-child(5) > .CodeMirror-line > [role=\"presentation\"]').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(OutputChangeExisting);\n// });\n// cy.get(':nth-child(12) > .CodeMirror-line > [role=\"presentation\"] > .cm-comment').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(Outputcode);\n// });\n// //Save Output.aspx and validate the toast message    \n// cy.log(\"**Validate Output.aspx Toast Message **\");\n// cy.get('#contentModuleSave').click();\n// cy.get(Constants.elementNotificationMessage).should('have.text', 'Compilation SucceededSaved asset(s)');\n// //need to check toast message****\n// //Close Output.aspx\n// cy.log(\"**Close Output.aspx File **\");\n// cy.get('button.tabCloseButton').click({ force: true })",
              "err": {},
              "isRoot": false,
              "uuid": "e8726b5e-f320-49bf-a18c-7db44e9d17d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8726b5e-f320-49bf-a18c-7db44e9d17d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71650,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09728e25-2aa2-499e-8f55-92e7a5ff05df",
          "title": "DAM should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "DAM: To check digital asset management functionality ",
              "fullTitle": "DAM should  DAM: To check digital asset management functionality ",
              "duration": 65770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.log('**Open Asset **');\ncy.wait(_locators.default.mediumWait);\ncy.get('div[title=\\'Content\\']').click();\nMenuPageObject.clickMenuItem(menuItem);\ncy.get('span.dockable').should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'File View', _locators.default.dockablePanelFile_tab);\ncy.wait(_locators.default.wait); //cy.get('fa fa-times').trigger('click')\ncy.get('[ng-click=\"vm.toggleSearchDropdown(true)\"] > cp-svg').click();\ncy.get('[placeholder=\"Label\"]').click();\ncy.get('[placeholder=\"Label\"]').clear();\ncy.get('[placeholder=\"Label\"]').type(_locators.default.folderName);\ncy.get('.btn-primary').click();\ncy.wait(_locators.default.wait);\ncy.get('.assetLabelLink.ng-binding').contains(_locators.default.folderName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get('.assetLabelLink.ng-binding').contains(_locators.default.folderName).trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.log('**Action: Select Publishing Test.. **');",
              "err": {},
              "isRoot": false,
              "uuid": "9d4fce43-110b-45d5-b2d8-dda9441f61bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d4fce43-110b-45d5-b2d8-dda9441f61bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68d41451-dd9c-4798-b37e-c4acdb009ea3",
          "title": "Links: To check all available links are clickable and opening properly ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "HelpIcon: To verify the navigation on clicking Help icon from left menu",
              "fullTitle": "Links: To check all available links are clickable and opening properly  HelpIcon: To verify the navigation on clicking Help icon from left menu",
              "duration": 41336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.shortWait); // Go to Help menu\ncy.log('** Go to Help menu**');\ncy.get('div[title=\\'Help\\']').click();\ncy.wait(_locators.default.shortWait); // Overview page should display\ncy.log('**Overview page should display**');\ncy.title().should('eq', 'Crownpeak V3 - Help - Overview');\ncy.get('strong').contains('Overview').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "ae7046e1-6921-4bc8-8163-f277e4caa21e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Documents: To verify the Customer Documents tab (if applicable)",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Customer Documents: To verify the Customer Documents tab (if applicable)",
              "duration": 5296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Click on Customer Documents\ncy.log('** Click on Customer Documents**');\ncy.get('p-header.ng-star-inserted > span').contains('Customer Documents').click(); // Customer Documents page should display (if applicable)\ncy.log('**Customer Documents page should display (if applicable)**');\ncy.title().should('eq', 'Crownpeak V3 - Help - Customer Documents');",
              "err": {},
              "isRoot": false,
              "uuid": "c305cca7-0732-4f39-9072-6a0924f55934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Support tab: To verify the Contact Support tab",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Contact Support tab: To verify the Contact Support tab",
              "duration": 5306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Click on Contact Support tab\ncy.log('** Click on Contact Support tab**');\ncy.get('p-header > span').contains('Contact Support').click(); // Contact Support form should display\ncy.log('**Contact Support form should display**');\ncy.title().should('eq', 'Crownpeak V3 - Help - Support');\ncy.get('strong').contains('Contact Support').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "ff0ab84d-2f75-4ef1-8894-c1be3e9b1a4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debug tab: To verify the Debug tab",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Debug tab: To verify the Debug tab",
              "duration": 5422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Click on Debug\ncy.log('** Click on Debug**');\ncy.get('p-header > span').contains('Debug').click(); // Debug page should display with Address, Cached Items, User Information\ncy.log('**Debug page should display with Address, Cached Items, User Information**');\ncy.title().should('eq', 'Crownpeak V3 - Help - Debug');\ncy.get('.debug-section > strong').contains('Address:').should('be.visible');\ncy.get('.debug-section-heading').contains('Cached Items').should('be.visible');\ncy.get('.debug-section-heading').contains('User Information:').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "54aa3181-9671-4b55-bc55-2492e7cd69ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Product Feedback: To verify the navigation on clicking Product feedback under the User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Product Feedback: To verify the navigation on clicking Product feedback under the User icon",
              "duration": 5343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click(); // Click on Product feedback link\ncy.log('**2. Click on Product feedback link **');\ncy.get('#topbarFeedback').click(); // Contact Support form should display\ncy.log('**Contact Support form should display**');\ncy.title().should('eq', 'Crownpeak V3 - Help - Support');\ncy.get('strong').contains('Contact Support').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "3c48eaf0-4719-415d-abfa-3a1cf313521d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Support: To verify the navigation on clicking Support under the User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Support: To verify the navigation on clicking Support under the User icon",
              "duration": 5230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click(); // Click on Support link\ncy.log('**2. Click on Support link **'); // A browser window should open for the Crownpeak Support page\ncy.log('**A browser window should open for the Crownpeak Support page**'); // cy.get('#topbarSupport').should('have.attr', 'cp-open-link-target', '_blank');\n// cy.get('#topbarSupport').should('have.attr', 'cp-open-link-target', '_blank');\ncy.get('#topbarSupport > span.name').should('have.text', 'Support');",
              "err": {},
              "isRoot": false,
              "uuid": "35395496-13b4-4701-9340-cf49a373d3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Help: To verify the navigation on clicking Help under User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Help: To verify the navigation on clicking Help under User icon",
              "duration": 5158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click(); // Click on Help link\ncy.log('**2. Click on Help link **'); // A browser window should open for the Crownpeak Support page\ncy.log('**A browser window should open for the Crownpeak Support page**'); // cy.get('#topbarHelp').should('have.attr', 'cp-open-link-target', '_blank');\n// cy.get('#topbarHelp').should('have.attr', 'cp-open-link', Constants.linkDocumentationBestPractices_url);\ncy.get('#topbarHelp > span.name').should('have.text', 'Help');",
              "err": {},
              "isRoot": false,
              "uuid": "f093cc90-a871-4b99-aa0d-fe9595a46307",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Theme: To verify the option displayed on hovering theme link under User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Theme: To verify the option displayed on hovering theme link under User icon",
              "duration": 5379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click(); // Hover  theme  link\ncy.log('**2. Hover  theme  link **'); //cy.get('#topbarThemeMenuToggle').trigger('mousemove');\ncy.get('#topbarThemeMenuToggle').trigger('mouseover'); // Default option should display\ncy.log('**Default option should display**'); //cy.get('.open > .cpDropdown > li > .ng-scope > .name').should('have.text', 'Default'); // Old\ncy.get('.open > .cpDropdown.dropdown-menu.dropdown-menu-right > li > button > .name').contains('Default').should('have.text', 'Default'); // New",
              "err": {},
              "isRoot": false,
              "uuid": "8d616454-75a6-4159-8a99-bf1111952c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Language: To verify the option displayed on hovering language link under User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Language: To verify the option displayed on hovering language link under User icon",
              "duration": 5181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\n// Hover  language  link\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.log('**2. Hover  language  link **'); //cy.get('#topbarLanguage').trigger('mousemove');\ncy.get('#topbarLanguage').trigger('mouseover'); // A list of languages should display\ncy.log('**A list of languages should display**');\ncy.get('ul.cpDropdown.dropdown-menu.dropdown-menu-right > li').children('button').should('have.length', 18);",
              "err": {},
              "isRoot": false,
              "uuid": "569949c7-58c7-49f9-a7f4-5f06ed9fbb9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Privacy link: To verify the Privacy link under User icon",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Privacy link: To verify the Privacy link under User icon",
              "duration": 5154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Go to user icon displayed on upper top right of page\n// Click  Privacy link\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click();\ncy.log('**2. Click on Privacy link **'); //cy.get('#topbarSupport').click();\ncy.log('**A browser window should open for the Crownpeak Support page**'); // cy.get('#topbarPrivacy').should('have.attr', 'cp-open-link-target', '_blank');\n// cy.get('#topbarPrivacy').should('have.attr', 'cp-open-link', Constants.linkPrivacy_url);\ncy.get('#topbarPrivacy > span.name').should('have.text', 'Privacy');",
              "err": {},
              "isRoot": false,
              "uuid": "132684bd-db31-40ae-bd17-27f21a528de1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DQM (1): To verify the navigation on DQM icon from the left menu",
              "fullTitle": "Links: To check all available links are clickable and opening properly  DQM (1): To verify the navigation on DQM icon from the left menu",
              "duration": 0,
              "state": "pending",
              "pass": false,
              "fail": false,
              "pending": true,
              "code": "",
              "err": {},
              "isRoot": false,
              "uuid": "4031f922-bdc3-45af-bf1c-fe4ebe001f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Market place: To verify the navigation on Marketplace icon  from the left menu",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Market place: To verify the navigation on Marketplace icon  from the left menu",
              "duration": 0,
              "state": "pending",
              "pass": false,
              "fail": false,
              "pending": true,
              "code": "",
              "err": {},
              "isRoot": false,
              "uuid": "7eb590f3-7353-43af-bb64-3bd742571ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "WCO (1): To verify the navigation on  WCO icon from the left menu",
              "fullTitle": "Links: To check all available links are clickable and opening properly  WCO (1): To verify the navigation on  WCO icon from the left menu",
              "duration": 5048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait); // Click on WCO icon from left menu\ncy.log('** Click on WCO icon from left menu**');\ncy.get('div[title=\\'WCO\\']').should('be.visible'); // Targeted Groups page should be displayed\ncy.log('**Targeted Groups page should be displayed**'); // cy.title().should('eq', 'Crownpeak V3 - WCO - Dynamic Content - Targeting Groups');\n// cy.get('strong').contains('Targeting Groups').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "2f25322d-a127-4963-845c-cc1c58b20653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout: To verify the Log out option under User",
              "fullTitle": "Links: To check all available links are clickable and opening properly  Logout: To verify the Log out option under User",
              "duration": 35367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.shortWait); // Go to user icon displayed on upper top right of page\n// Click on Logout link\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click({\n  force: true\n});\ncy.log('**2. Click on Logout link **');\ncy.wait(_locators.default.wait);\ncy.get('#topbarSignOut').click({\n  force: true\n});\ncy.wait(_locators.default.shortWait); // The user should successfully be logged out of the CMS\ncy.log('**The user should successfully be logged out of the CMS**');\ncy.title().should('eq', 'Crownpeak V3 - Log In');",
              "err": {},
              "isRoot": false,
              "uuid": "f9699b67-87cd-4d1a-aed4-82539a919a3c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae7046e1-6921-4bc8-8163-f277e4caa21e",
            "c305cca7-0732-4f39-9072-6a0924f55934",
            "ff0ab84d-2f75-4ef1-8894-c1be3e9b1a4d",
            "54aa3181-9671-4b55-bc55-2492e7cd69ee",
            "3c48eaf0-4719-415d-abfa-3a1cf313521d",
            "35395496-13b4-4701-9340-cf49a373d3b1",
            "f093cc90-a871-4b99-aa0d-fe9595a46307",
            "8d616454-75a6-4159-8a99-bf1111952c95",
            "569949c7-58c7-49f9-a7f4-5f06ed9fbb9c",
            "132684bd-db31-40ae-bd17-27f21a528de1",
            "2f25322d-a127-4963-845c-cc1c58b20653",
            "f9699b67-87cd-4d1a-aed4-82539a919a3c"
          ],
          "failures": [],
          "pending": [
            "4031f922-bdc3-45af-bf1c-fe4ebe001f0d",
            "7eb590f3-7353-43af-bb64-3bd742571ef4"
          ],
          "skipped": [],
          "duration": null,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8dd23d14-f184-4181-bb60-ee94c0072aeb",
          "title": "Login should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "V3 Login: To verify that user navigation on hitting application url",
              "fullTitle": "Login should  V3 Login: To verify that user navigation on hitting application url",
              "duration": 65497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.visit(_locators.default.url);\ncy.wait(_locators.default.longWait); // V3 Log In screen should appear \ncy.log('**V3 Log In screen should appear.**');\ncy.title().should('eq', 'Crownpeak V3 - Log In');",
              "err": {},
              "isRoot": false,
              "uuid": "526f392e-a923-4051-a935-03235f957b63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forget Password Link: To verify the functionality of Forgot Password? link on the CMS Login screen",
              "fullTitle": "Login should  Forget Password Link: To verify the functionality of Forgot Password? link on the CMS Login screen",
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.get(_locators.default.loginForgot_lnk).should('be.visible');\ncy.get(_locators.default.loginForgot_lnk).click(); // A Send Email prompt should appear for resetting the CMS Login password\ncy.log('**A Send Email prompt should appear for resetting the CMS Login password**');\ncy.get(_locators.default.loginForgot_txt).should('have.text', expectedForgotText);",
              "err": {},
              "isRoot": false,
              "uuid": "29e5fb52-dc8e-4897-9d77-f8e6a58b605c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Back to login link: To verify the navigation of the user on clicking back to Login link",
              "fullTitle": "Login should  Back to login link: To verify the navigation of the user on clicking back to Login link",
              "duration": 30253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.shortWait);\ncy.get(_locators.default.loginForgotPasswordBack_lnk).should('be.visible');\ncy.get(_locators.default.loginForgotPasswordBack_lnk).click();\ncy.wait(_locators.default.shortWait); // User should be returned to the CMS Login page\ncy.log('**User should be returned to the CMS Login page**'); //cy.get('.version.ng-binding').should('have.text', 'Version ' + Constants.build);",
              "err": {},
              "isRoot": false,
              "uuid": "49d479ac-9442-4dcf-9dfa-f3355b1b1a3c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Privacy Link: Verify the functionality of Privacy link on the CMS Login screen",
              "fullTitle": "Login should  Privacy Link: Verify the functionality of Privacy link on the CMS Login screen",
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "// A browser window should open for the Privacy Policy page\ncy.log('**A browser window should open for the Privacy Policy page**');\ncy.get('a[href=\"' + _locators.default.linkPrivacy_url + '\"]').should('have.attr', 'target', '_blank');",
              "err": {},
              "isRoot": false,
              "uuid": "cad5ed03-2d37-4d5a-8977-0c15696e091e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Close browser windows and return to V3 Clone: To verify the case when user returns to login page and Release Notes & Privacy browser windows are closed",
              "fullTitle": "Login should  Close browser windows and return to V3 Clone: To verify the case when user returns to login page and Release Notes & Privacy browser windows are closed",
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.log('**Cypress limitation!!**');",
              "err": {},
              "isRoot": false,
              "uuid": "1dc418d6-af2c-43c3-a7bd-3e4256ddd382",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Release Notes link: To verify the Release Note link on the CMS Login screen",
              "fullTitle": "Login should  Release Notes link: To verify the Release Note link on the CMS Login screen",
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "// A browser window should open with a login screen for the Release Notes page\ncy.log('**A browser window should open with a login screen for the Release Notes page**');\ncy.get('a[href=\"' + _locators.default.linkReleaseNotes_url + '\"]').should('have.attr', 'target', '_blank');",
              "err": {},
              "isRoot": false,
              "uuid": "574f93e4-b836-4606-9117-3e35c17ce804",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with incorrect username: Enter the wrong Username and Password",
              "fullTitle": "Login should  Login with incorrect username: Enter the wrong Username and Password",
              "duration": 1806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.get(_locators.default.loginUserName_txt).should('be.visible').type('WrongUserName');\ncy.get(_locators.default.loginPassword_txt).should('be.visible').type('WrongPassword');\ncy.get(_locators.default.loginLogin_btn).should('be.visible').click(); // Error prompt should appear stating Your Crownpeak Username or Password is Incorrect.\ncy.log('**Error prompt should appear stating Your Crownpeak Username or Password is Incorrect.**');\ncy.get(_locators.default.loginError_txt).should('have.text', 'Your Crownpeak Username or Password is Incorrect.');",
              "err": {},
              "isRoot": false,
              "uuid": "1f107ef3-9598-48b2-a2b3-6bfe809ce28d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with correct password: Enter the correct Username and Password for your admin account",
              "fullTitle": "Login should  Login with correct password: Enter the correct Username and Password for your admin account",
              "duration": 15867,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.get(_locators.default.loginUserName_txt).should('be.visible').clear().type(_locators.default.usernameInput);\ncy.get(_locators.default.loginPassword_txt).should('be.visible').clear().type(_locators.default.passwordInput);\ncy.get(_locators.default.loginLogin_btn).should('be.visible').click(); // User should log in to application with no errors.\ncy.log('**User should log in to application with no errors.**');\ncy.get(_locators.default.loginVersion_lbl).should('not.be.visible');\ncy.wait(_locators.default.shortWait);",
              "err": {},
              "isRoot": false,
              "uuid": "6e3e0fe6-7177-4df7-965e-7dfbbab05be6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the page displayed after login to application: Observe the page loaded upon login",
              "fullTitle": "Login should  To verify the page displayed after login to application: Observe the page loaded upon login",
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "// User should be taken to the Content page(or as set by user in preferences)\ncy.log('**User should be taken to the Content page(or as set by user in preferences)**');\ncy.title().should('eq', 'Crownpeak V3 - Dashboard');",
              "err": {},
              "isRoot": false,
              "uuid": "c4d58a7d-ce8a-4e46-a5f0-b5de48589474",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "526f392e-a923-4051-a935-03235f957b63",
            "29e5fb52-dc8e-4897-9d77-f8e6a58b605c",
            "49d479ac-9442-4dcf-9dfa-f3355b1b1a3c",
            "cad5ed03-2d37-4d5a-8977-0c15696e091e",
            "1dc418d6-af2c-43c3-a7bd-3e4256ddd382",
            "574f93e4-b836-4606-9117-3e35c17ce804",
            "1f107ef3-9598-48b2-a2b3-6bfe809ce28d",
            "6e3e0fe6-7177-4df7-965e-7dfbbab05be6",
            "c4d58a7d-ce8a-4e46-a5f0-b5de48589474"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 113897,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04a79677-ce4d-41ff-9221-f9b61bdc558e",
          "title": "Publishing should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Proceed to Folder, Branched Asset, Cloned Asset",
              "fullTitle": "Publishing should  Proceed to Folder, Branched Asset, Cloned Asset",
              "duration": 580707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "cy.wait(_locators.default.wait);\ncy.get('.module.content').should('be.visible').click({\n  force: true\n});\ncy.wait(_locators.default.wait); //Open File Menu and check New->Sub menu items are displaying\nMenuPageObject.clickMenuItem(menuItem); //.wait(Constants.shortWait)\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('New').trigger('mouseover').should('be.visible');\ncy.wait(_locators.default.shortWait);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').trigger('mousemove');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').click({\n  force: true\n}); // The Create Site Root prompt should come up\ncy.log('**The Create Site Root prompt should come up.**');\ncy.get('p-header').should('have.text', 'Create Site Root '); // Enter New site root name in textbox\ncy.log('**Enter New site root name in textbox**');\ncy.get('#siteRootInput').should('be.visible').trigger('click');\ncy.log('**Text should be in the text box.**');\ncy.get('#siteRootInput').type(SiteRootName); // Click on Install Component Project using Component Library 2.1 checkbox\ncy.log('**Click on Install Component Project using Component Library 2.1 checkbox**');\ncy.get('div.checkbox').should('be.visible');\ncy.get('div.checkbox').children('label').should('have.text', 'Install Component Project using Component Library 2.1');\ncy.get('div.checkbox').click(); // A check mark should appear in the box and two more options should appear\ncy.log('**A check mark should appear in the box and two more options should appear**');\ncy.get('.checkbox.ng-star-inserted').should('have.length', 2);\ncy.get('.checkbox.ng-star-inserted > label').first().should('have.text', 'Install Samples');\ncy.get('.checkbox.ng-star-inserted > label').first().children('input').should('be.checked');\ncy.get('.checkbox.ng-star-inserted > label').last().should('have.text', 'Rebuild Site After Creation ');\ncy.get('.checkbox.ng-star-inserted > label').last().children('input').should('be.checked'); // Click on save button\ncy.log('**Click on save button**');\ncy.get('.ui-dialog-footer').should('be.visible').children('p-footer').children('button').last().click({\n  force: true\n}); // A notification should come up stating that the Site Root is created.\ncy.log('**A notification should come up stating that the Site Root is created.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created site root ' + SiteRootName + '.'); // Activity Monitor Status: To verify user able to Open the Activity Monitor\ncy.get('#topbarPublishingMenuToggle').click();\ncy.wait(_locators.default.longWait);\ncy.get('.publishingDropdown').should('be.visible');\ncy.get('.publishingactivity > .cpDropdown > .header > .name').should('have.text', 'Activity Monitor Quickview');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Long Running Tasks').trigger('scroll');\ncy.get('.taskName').contains('RebuildCLSite').should('be.visible');\ncy.wait(_locators.default.shortWait);\ncy.get('.taskName').contains('RebuildCLSite').prev().should('have.attr', 'class', 'statusColor session-success');\ncy.get('.taskName').contains('FinishAddCL').should('be.visible');\ncy.wait(_locators.default.shortWait);\ncy.get('.taskName').contains('FinishAddCL').prev().should('have.attr', 'class', 'statusColor session-success');\ncy.get('.taskName').contains('AddCL').should('be.visible'); //.wait(Constants.shortWait);\ncy.get('.taskName').contains('AddCL').prev().should('have.attr', 'class', 'statusColor session-success'); // cy.wait(Constants.wait);     \n// Search for the created SiteRoot\nUtilityHelper.searchSiteRoot(SiteRootName, _locators.default.wait); // Double click to open searched folder\ncy.get('.assetLabelLink.ng-binding').contains(SiteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get('.assetLabelLink.ng-binding').contains(SiteRootName).trigger('dblclick');\ncy.wait(_locators.default.wait); // Verify the display of various files\ncy.get('.crumbsLink.ng-binding').contains(SiteRootName).should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('_Assets').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('_Site Config').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Component Project').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Demo Page').should('be.visible');\ncy.get('.assetLabelLink.ng-binding').contains('Page').should('be.visible'); //CReate Wisywig Asset\ncy.wait(_locators.default.shortWait);\ncy.get('button#topbarFileMenuToggle').click();\ncy.get('button#topbarNewMenuToggle').trigger('mouseover');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('File').trigger('mousemove').trigger('click'); // Create Template File modal\ncy.get('div[role=dialog]', {\n  timeout: _locators.default.wait\n}).should('be.visible');\ncy.get('p-header').should('contain', 'Create New');\ncy.get('#label').click(); //input the new File name in input box and verify the file path\ncy.get('#label').type(WisywigFileName);\ncy.get('.new-file-name-input > span').should('have.text', 'Path: /' + SiteRootName + ''); //click on Browse button and select the Drag and Drop Template\ncy.get('button.btn.btn-primary:contains(\\'Browse\\')').trigger('click');\ncy.wait(_locators.default.wait);\ncy.get('asset-browser.ng-star-inserted > .head > .assetRow > .assetLabel > .assetLabelLink').click();\ncy.get('a.assetLabelLink.ng-binding').contains('wysiwyg image test template').click({\n  force: true\n});\ncy.get('button').contains('OK').click();\ncy.get('span.new-file-template-path').should('have.text', 'Path: /' + SiteRootName + '/Component Project/Templates/wysiwyg image test template'); //select the workflow and click on Create button\ncy.get('select').select('Basic Workflow');\ncy.wait(_locators.default.wait);\ncy.get('button.btn.btn-primary').contains('Create').click();\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created asset ' + WisywigFileName + '.');\ncy.wait(_locators.default.wait); //Open the created asset\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('click');\ncy.wait(_locators.default.wait);\ncy.get('body').type('{alt}{shift}B', {\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('dblclick');\ncy.wait(_locators.default.wait); // Change image and WYSIWIG text\ncy.log('**Action: Change the image.**');\ncy.wait(_locators.default.wait); // Select Image\nUtilityHelper.selectImageInImageComponent(SiteRootName, 'Beach-Small.jpg', _locators.default.wait); // Change the text in WYSIWYG to display the  build.\ncy.log('**Change the text to display the  build.**');\nUtilityHelper.insertTextInWYSIWYGIframe('This is New WYSIWIG text' + randomNumber); //Action: Select Save.\ncy.log('**Action: Select Save.**');\ncy.get('#contentModuleSave').click();\ncy.wait(_locators.default.wait);\ncy.get('.toast-message').should('have.text', 'Saving asset completed successfully'); // click on created Asset and make it Branch Asset\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('contextmenu');\ncy.wait(_locators.default.wait); // Stage and Live the created Branched Asset\ncy.log('**Action: Right click the Branched Asset that is in Draft.** ');\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Pending').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Send for Approval\" completed.');\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('contextmenu');\ncy.wait(_locators.default.wait);\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Stage').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Approve\" completed.'); // Right click the same asset and select Workflow-> Live.\ncy.log('**Action: Right click the same asset and select Workflow-> Live.**');\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('contextmenu');\ncy.wait(_locators.default.wait);\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get('.statusName.workflowMenuItem').contains('Live').click({\n  force: true\n});\ncy.wait(_locators.default.wait); // Select Workflow-> Live.\ncy.log('**Action: Select Workflow-> Live.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Deploy to Live\" completed.');\ncy.wait(_locators.default.wait);\ncy.get('button.tabCloseButton').click(); //Open the created asset\ncy.get('div.asset.ng-scope:nth-child(7) div.assetRow.ng-scope div.assetLabel:nth-child(4) > a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('click');\ncy.wait(_locators.default.wait);\ncy.wait(_locators.default.wait);\ncy.get('div.asset.ng-scope:nth-child(7) div.assetRow.ng-scope div.assetLabel:nth-child(4) > a.assetLabelLink.ng-binding').contains(WisywigFileName).trigger('dblclick');\ncy.wait(_locators.default.wait); // Change image and WYSIWIG text\ncy.log('**Action: Change the image.**');\ncy.wait(_locators.default.wait); // Select Image\nUtilityHelper.selectImageInImageComponent(SiteRootName, 'Beach-Small.jpg', _locators.default.wait); // Change the text in WYSIWYG to display the  build.\ncy.log('**Change the text to display the  build.**');\nUtilityHelper.insertTextInWYSIWYGIframe('This is New WYSIWIG text' + randomNumber); // Select Save.\ncy.log('**Action: Select Save.**');\ncy.get('#contentModuleSave').click();\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Saving asset completed successfully'); // click on created Asset and make it Branch Asset\ncy.wait(_locators.default.wait);\ncy.get('div.asset.ng-scope:nth-child(7) div.assetRow.ng-scope div.assetLabel:nth-child(4) > a.assetLabelLink.ng-binding').trigger('contextmenu');\ncy.wait(_locators.default.wait); // Stage and Live the created Branched Asset\ncy.log('**Action: Right click the Branched Asset that is in Draft.** ');\ncy.wait(_locators.default.wait);\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Pending').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Send for Approval\" completed.');\ncy.wait(_locators.default.wait);\ncy.get('div.asset.ng-scope:nth-child(7) div.assetRow.ng-scope div.assetLabel:nth-child(4) > a.assetLabelLink.ng-binding').trigger('contextmenu');\ncy.wait(_locators.default.wait);\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Stage').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Approve\" completed.'); // Right click the same asset and select Workflow-> Live.\ncy.log('**Action: Right click the same asset and select Workflow-> Live.**');\ncy.wait(_locators.default.wait);\ncy.get('div.asset.ng-scope:nth-child(7) div.assetRow.ng-scope div.assetLabel:nth-child(4) > a.assetLabelLink.ng-binding').trigger('contextmenu');\ncy.wait(_locators.default.wait);\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get('.statusName.workflowMenuItem').contains('Live').click({\n  force: true\n});\ncy.wait(_locators.default.wait); // Select Workflow-> Live.\ncy.log('**Action: Select Workflow-> Live.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Deploy to Live\" completed.');\ncy.wait(_locators.default.wait); // Verify and Delete the retired Branched Assret\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).first().trigger('click');\ncy.get(':nth-child(6) > .assetRow > .status > .statusColor').should('have.attr', 'uib-tooltip', 'RETIRED');\ncy.wait(_locators.default.wait);\ncy.wait(_locators.default.wait); // Right click on the retired Branched Asset and select Delete.\ncy.log('**Action: Right click on the retired Branched Asset and select Delete.**');\ncy.get('body').type('{Del}', {\n  force: true\n});\ncy.wait(_locators.default.wait); // Select Delete.\ncy.log('**Action: Select Delete.**');\ncy.get('body > modal-base > modal-dialog > p-dialog > div > div.ui-dialog-content.ui-widget-content > div > p').should('have.text', 'Are you sure you want to delete \"Wisywig_Asset\"?');\ncy.get('button.btn.btn-danger.ng-star-inserted').contains('Delete').click();\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Successfully deleted \"Wisywig_Asset\".');\ncy.get('button.tabCloseButton').click(); // Cloning\n// Create a CLoned Asset.\ncy.log('**Action: Right click on the Wysiwyg and select Clone. **');\ncy.get('a.assetLabelLink.ng-binding').contains(WisywigFileName).first().trigger('click', {\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get('body').type('{ctrl}{shift}L', {\n  force: true\n});\ncy.wait(_locators.default.wait); // Enter Clone Asset Build XXXXX in the text box and select Ok.\ncy.log('**Action: Enter Clone Asset Build XXXXX in the text box and select Ok. **');\ncy.get('p-header').should('have.text', 'Clone ');\ncy.get('#cloneInput').click();\ncy.get('#cloneInput').clear();\ncy.get('#cloneInput').type('Cloned Asset Build Test ' + randomNumber);\ncy.get('button.btn.btn-primary').contains('OK').click();\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Cloned asset \"' + WisywigFileName + '\".');\ncy.wait(_locators.default.shortWait); // Edit the cloned Asset and Change the image \ncy.log('**Action: Right click on the newly cloned asset an select Edit->Form.**');\ncy.get('a.assetLabelLink.ng-binding').contains('Cloned Asset Build Test').last().trigger('click');\ncy.get('body').type('{alt}{shift}E', {\n  force: true\n}); // Update image.\ncy.log('**Action: Update image.**');\nUtilityHelper.selectImageInImageComponent(SiteRootName, imageName, _locators.default.wait); // Change the text in WYSIWYG to display the  build.\ncy.log('**Change the text to display the  build.**');\nUtilityHelper.insertTextInWYSIWYGIframe('This is New WYSIWIG text' + randomNumber); // Select Save.\n// Add image inside the WYSIWYG component\ncy.get('.mce-ico.mce-i-image').click();\ncy.get('.mce-title').should('have.text', 'Insert/edit image');\ncy.get('.mce-ico.mce-i-browse').click();\ncy.wait(_locators.default.wait);\ncy.get('.ng-scope.ng-isolate-scope > .tree > .assetList > :nth-child(1) > .assetRow > .assetLabel > .assetLabelLink').trigger('dblclick'); //cy.get('asset-browser.ng-star-inserted > .tree > .assetList > [style=\"\"] > .assetRow > .assetLabel > .assetLabelLink').trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.get('.ng-scope.ng-isolate-scope > .tree > .assetList > :nth-child(2) > .assetRow > .assetLabel > .assetLabelLink').trigger('dblclick'); // cy.get('asset-browser.ng-star-inserted > .tree > .assetList > :nth-child(2) > .assetRow > .assetLabel > .assetLabelLink').trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.get('.ng-scope.ng-isolate-scope > .tree > .assetList > :nth-child(5) > .assetRow > .assetLabel > .assetLabelLink').trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.get('button > span').contains('Ok').click();\ncy.wait(_locators.default.wait); // Select Save.\ncy.log('**Action: Select Save.**');\ncy.get('#contentModuleSave').click();\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Saving asset completed successfully'); // GO to preview\ncy.log('**Action: Select Preview**');\ncy.get('#contentModulePreview').click(); // Set the Aset in draft to Stage and then to Live\ncy.log('**Action: Right click the Cloned Asset that is in Draft and click Pending. **');\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains('Cloned Asset Build Test').last().trigger('contextmenu', {\n  force: true\n});\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Pending').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Send for Approval\" completed.'); // Right click the Branched Asset that is in Draft.\ncy.log('**Action: Right click the Branched Asset that is in Draft. **');\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains('Cloned Asset Build Test').last().trigger('contextmenu', {\n  force: true\n});\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.get('.statusName.workflowMenuItem').contains('Stage').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Approve\" completed.'); // Right click the same asset and select Workflow-> Live.\ncy.log('**Action: Right click the same asset and select Workflow-> Live.**');\ncy.wait(_locators.default.wait);\ncy.get('a.assetLabelLink.ng-binding').contains('Cloned Asset Build Test').last().trigger('contextmenu', {\n  force: true\n});\ncy.get('.name.ng-scope').contains('Workflow').click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get('.statusName.workflowMenuItem').contains('Live').click({\n  force: true\n}); // Select Workflow-> Live.\ncy.log('**Action: Select Workflow-> Live.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Workflow command \"Deploy to Live\" completed.'); // Close the Asset\ncy.log('**Action: CLose the Asset.**');\ncy.get('button.tabCloseButton').click();\ncy.wait(_locators.default.wait); //Delete the Asset\ncy.log('**Action: Right click on the retired Branched Asset and select Delete.**');\ncy.get('body').type('{Del}', {\n  force: true\n});\ncy.wait(_locators.default.wait); // Select Delete\ncy.log('**Action: Select Delete.**');\ncy.get('body > modal-base > modal-dialog > p-dialog > div > div.ui-dialog-content.ui-widget-content > div > p').should('have.text', 'Are you sure you want to delete \"Cloned Asset Build Test ' + randomNumber + '\"?');\ncy.get('button.btn.btn-danger.ng-star-inserted').contains('Delete').click();\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Successfully deleted \"Cloned Asset Build Test ' + randomNumber + '\".');",
              "err": {},
              "isRoot": false,
              "uuid": "34786f63-8f2c-40a9-adc0-b95ff8a6e515",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34786f63-8f2c-40a9-adc0-b95ff8a6e515"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 580707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "529035c6-33b3-4134-9697-96eca608077b",
          "title": "Reports should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".should() - login to v3 > navigate through reports > verify each reports url",
              "fullTitle": "Reports should  .should() - login to v3 > navigate through reports > verify each reports url",
              "duration": 60781,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "/*\n    1. Go to Reports menu\n    2. Options will display\n*/\ncy.wait(_locators.default.shortWait);\ncy.get('.module.reports').should('be.visible').click({\n  force: true\n});\ncy.wait(_locators.default.shortWait);\n/*\nInstance Overview page should open and nav should display: \nOperational, Audit, My Reports, Users and Logins, Publishing, \nAssets and Tasks\n*/\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Operational');\ncy.url().should('include', '/reports/operational/instance-overview');\ncy.get(_locators.default.reportsHeader_txt).first().should('have.text', 'Instance Overview'); // Click on Audit>> Asset Publish\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Audit');\ncy.get('a').contains('Asset Publish').should('be.visible').click().url().should('include', '/asset-publish'); // Asset Publish page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Asset Publish').should('be.visible'); // Click on Audit>>  Publish\ncy.get('a').contains(/^Publish$/).should('be.visible').click().url().should('include', '/publish'); // Publish page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Publish').should('be.visible'); // Click on Audit>>  System\ncy.get('a').contains('System').should('be.visible').click().url().should('include', '/system'); // System page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('System').should('be.visible'); // Click on Audit>>  Orphan Content\ncy.get('a').contains('Orphan Content').should('be.visible').click().url().should('include', '/orphan-content'); // Orphan Content page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Orphan Content').should('be.visible'); // Click on My Reports>> My Flagged Assets\nverifyReportsSection(_locators.default.reportsSection_lnk, 'My Reports');\ncy.get('a').contains('My Flagged Assets').should('be.visible').click().url().should('include', '/my-flagged-assets'); // My Flagged Assets page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('My Flagged Assets').should('be.visible'); // Click on My Reports>> My Locked Assets\ncy.get('a').contains('My Locked Assets').should('be.visible').click().url().should('include', '/my-locked-assets'); // My Locked Assets page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('My Locked Assets').should('be.visible'); // Click on My Reports>> My Queued Assets\ncy.get('a').contains('My Queued Assets').should('be.visible').click().url().should('include', '/my-queued-assets'); // My Queued Assets page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('My Queued Assets').should('be.visible'); // Click on My Reports>> My Last Modified\ncy.get('a').contains('My Last Modified').should('be.visible').click().url().should('include', '/my-last-modified'); // My Last Modified page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('My Last Modified').should('be.visible'); // Click on My Reports>> My Alerts\ncy.get('a').contains('My Alerts').should('be.visible').click().url().should('include', '/my-alerts'); // My Alerts page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('My Alerts').should('be.visible'); // Click on My Reports>> My Modified Unpublished\ncy.get('a').contains('My Modified Unpublished').should('be.visible').click().url().should('include', '/my-modified-unpublished'); // My Modified Unpublished page should display     \ncy.get(_locators.default.reportsHeader_txt).first().contains('My Modified Unpublished').should('be.visible'); // Click on My Custom Reports>>  Save Asset report\nverifyReportsSection(_locators.default.reportsSection_lnk, 'My Custom Reports'); // cy.get('a').contains('Save asset report').should('be.visible').click().url().should('include', '/my-custom-report')\n// // Save Asset report should display\n// cy.get('strong').first().contains('Save asset report').should('be.visible');\n// Click on Users and Logins>>   Last Logins\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Users and Logins');\ncy.get('a').contains('Last Logins').should('be.visible').click().url().should('include', '/last-logins'); // Last Logins page should display\ncy.get('strong').first().contains('Last Logins').should('be.visible'); // Click on Users and Logins>>   Most Active Users\ncy.get('a').contains('Most Active Users').should('be.visible').click().url().should('include', '/most-active-users'); // Most Active Users page should display\ncy.get('strong').first().contains('Most Active Users').should('be.visible'); // Click on Users and Logins>>   Least Active Users\ncy.get('a').contains('Least Active Users').should('be.visible').click().url().should('include', '/least-active-users'); // Least Active Users page should display\ncy.get('strong').first().contains('Least Active Users').should('be.visible'); // Click on Users and Logins>>  Login Alerts\ncy.get('a').contains('Login Alerts').should('be.visible').click().url().should('include', '/login-alerts'); // Login Alerts Users page should display\ncy.get('strong').first().contains('Login Alerts').should('be.visible'); // Click on Users and Logins>>  Never Logged In\ncy.get('a').contains('Never Logged In').should('be.visible').click().url().should('include', '/never-logged-in'); // Never Logged In page should display\ncy.get('strong').first().contains('Never Logged In').should('be.visible'); // Click on Publishing>>  Last Published\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Publishing');\ncy.get('a').contains('Last Published').should('be.visible').click().url().should('include', '/last-published'); // Last Published page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Last Published').should('be.visible'); // Click on Publishing>>  Assets Near Publishing\ncy.get('a').contains('Assets Near Publishing').should('be.visible').click().url().should('include', '/assets-near-publishing'); // Assets Near Publishing page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Assets Near Publishing').should('be.visible'); // Click on Publishing>>  Modified Unpublished\ncy.get('a').contains(/^Modified Unpublished$/).should('be.visible').click().url().should('include', '/modified-unpublished'); // Modified Unpublished page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Modified Unpublished').should('be.visible'); // Click on Publishing>>  Asset Refresh Schedule\ncy.get('a').contains('Asset Refresh Schedule').should('be.visible').click().url().should('include', '/asset-refresh-schedule'); // Asset Refresh Schedule page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Asset Refresh Schedule').should('be.visible'); // Click on Publishing>>  Queued Assets\ncy.get('a').contains(/^Queued Assets$/).should('be.visible').click().url().should('include', '/queued-assets'); // Queued Assets page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Queued Assets').should('be.visible'); // Click on Publishing>>  Queue Size\ncy.get('a').contains(/^Queue Size$/).should('be.visible').click().url().should('include', '/queue-size'); // Queue Size page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Queue Size').should('be.visible'); // Click on Publishing>>  Errors\ncy.get('a').contains('Errors').should('be.visible').click().url().should('include', '/errors'); // Errors page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Errors').should('be.visible'); // Click on Assets >>  Locked Assets\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Assets');\ncy.get('a').contains(/^Locked Assets$/).should('be.visible').click().url().should('include', '/locked-assets'); // Locked Assets page should display\ncy.get('strong').first().contains('Locked Assets').should('be.visible'); // Click on Assets >>  Templates\ncy.get('a').contains('Templates').should('be.visible').click().url().should('include', '/templates'); // Templates page should display\ncy.get('strong').first().contains('Templates').should('be.visible'); // Click on Assets >>  New Assets\ncy.get('a').contains('New Assets').should('be.visible').click().url().should('include', '/new-assets'); // New Assets page should display\ncy.get('strong').first().contains('New Assets').should('be.visible'); // Click on Assets >>  Oldest Pages\ncy.get('a').contains('Oldest Pages').should('be.visible').click().url().should('include', '/oldest-pages'); // Oldest Pages page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Oldest Pages').should('be.visible'); // Click on Assets >>  Last Modified\ncy.get('a').contains(/^Last Modified$/).should('be.visible').click().url().should('include', '/last-modified'); // Last Modified page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Last Modified').should('be.visible'); // Click on Assets >>  Slow Performing Templates\ncy.get('a').contains('Slow Performing Templates').should('be.visible').click().url().should('include', '/slow-performing-templates'); // Slow Performing Templates page should display\ncy.get('strong').first().contains('Slow Performing Templates').should('be.visible'); // Click on Tasks>> Workflow Tasks\nverifyReportsSection(_locators.default.reportsSection_lnk, 'Tasks');\ncy.get('a').contains('Workflow Tasks').should('be.visible').click().url().should('include', '/workflow-tasks'); // Workflow Tasks page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Workflow Tasks').should('be.visible'); // Click on Tasks>> Site Tasks\ncy.get('a').contains('Site Tasks').should('be.visible').click().url().should('include', '/site-tasks'); // Site Tasks page should display\ncy.get(_locators.default.reportsHeader_txt).first().contains('Site Tasks').should('be.visible');",
              "err": {},
              "isRoot": false,
              "uuid": "51f4c534-7f89-4033-9609-46576a993070",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51f4c534-7f89-4033-9609-46576a993070"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60781,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62433a73-dab0-41e2-a9b3-fe9cfb9cb591",
          "title": "Settings should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".should() - login to v3 > navigate through reports > verify each settings",
              "fullTitle": "Settings should  .should() - login to v3 > navigate through reports > verify each settings",
              "duration": 114425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "/*\nGo to Settings menu\nOptions will display\n*/\ncy.wait(_locators.default.shortWait);\ncy.get('.module.settings').should('be.visible').click({\n  force: true\n});\ncy.wait(_locators.default.shortWait);\ncy.get('.cpModuleHeader').first().should('have.text', 'Settings');\ncy.get('p-header').contains('Account').should('be.visible');\ncy.url().should('include', '/settings/account/profile');\ncy.get('h1').first().should('have.text', 'Edit Profile');\n/*\nClick on Edit Preferences\n*/\ncy.get('a').contains('Edit Preferences').should('be.visible').click().url().should('include', '/account/preferences'); // Edit Preferences page should display\ncy.get('h1').first().contains('Preferences').should('be.visible');\n/*\nClick on Users/groups>> Users\n*/\ncy.get('p-header').contains('Users / Groups').should('be.visible').click();\ncy.wait(8000);\ncy.get('#ui-accordiontab-1-content > .ui-accordion-content > :nth-child(1) > ul.ng-star-inserted > .ng-star-inserted > a').should('be.visible').click({\n  timeout: _locators.default.wait\n});\ncy.wait(_locators.default.wait); // Edit Preferences page should display\ncy.url().should('include', '/users/groups/users');\ncy.get('h1').first().should('have.text', 'Users'); // Click on Users/groups>> Groups\ncy.get('#ui-accordiontab-1-content > .ui-accordion-content > :nth-child(2) > ul.ng-star-inserted > .ng-star-inserted > a').should('be.visible').click().url().should('include', '/users/groups/groups'); // Page with groups info should display\ncy.get('h1').first().contains('Groups').should('be.visible'); // Click on Workflow>> Workflows\ncy.get('p-header').contains('Workflow').should('be.visible').click(); // List of Workflows should display\ncy.get('#ui-accordiontab-2-content > .ui-accordion-content > :nth-child(1) > ul.ng-star-inserted > .ng-star-inserted > a').should('be.visible').click({\n  timeout: _locators.default.shortWait\n});\ncy.wait(_locators.default.wait);\ncy.url().should('include', '/workflow/workflows'); // Click on Test workflow or any workflow\ncy.get('h1').first().should('have.text', 'Workflows');\n/*  Edit Workflow modal should appear\n    Click on Test workflow \n    Click on Edit steps link\n*/\ncy.get('tr:nth-child(1) > td:nth-child(1)').should('be.visible');\ncy.get('tr:nth-child(1) > td:nth-child(1)').click({\n  force: true\n}); // Edit the name of the workflow and description>> Click on Cancel button\ncy.get('#description').clear();\ncy.get('#description').type('Automation test');\ncy.log('**Action: Select Cancel.**');\ncy.get('button.cancel.btn').contains('Cancel').should('be.visible').click();\ncy.get('p-header').contains('Discard Changes').should('be.visible');\ncy.get('div.modal-body').should('have.text', ' Are you sure you want to discard changes? ');\ncy.get('button.btn.btn-danger').contains('Discard Changes').should('be.visible');\ncy.log('**Action: Select Discard changes button.**');\ncy.get('button.btn.btn-danger').contains('Discard Changes').click(); // Click on Workflow>> Workflow Filters\ncy.get('a').contains('Workflow Filters').should('be.visible').click().url().should('include', '/workflow/workflowFilters'); // Workflow Filters should display\ncy.get('h1').first().contains('Workflow Filters').should('be.visible'); // Click on Publishing>> Export SFTP\ncy.get('p-header').contains('Publishing').should('be.visible').click(); // Export SFTP page should display\ncy.get('a').contains('Export SFTP').should('be.visible').click();\ncy.wait(_locators.default.shortWait);\ncy.url().should('include', '/publishing/exportftp');\ncy.get('h1').first().should('have.text', 'Export SFTP'); // Click on Publishing>> Export S3\ncy.get('a').contains('Export S3').should('be.visible').click().url().should('include', '/publishing/exports3'); // Export S3 page should display\ncy.get('h1').first().should('have.text', 'Export S3'); // Click on Publishing>> FTP Certificates\ncy.get('a').contains('FTP Certificates').should('be.visible').click().url().should('include', '/publishing/ftpcertificates'); // FTP Certificates page should display\ncy.get('h1').first().should('have.text', 'FTP Certificates'); // Click on Publishing>> FTP Mounts\ncy.get('a').contains('FTP Mounts').should('be.visible').click().url().should('include', '/publishing/ftp-mounts'); // FTP Mounts page should display\ncy.get('h1').first().should('have.text', 'FTP Mounts'); // Click on Publishing>> Export HTTP\ncy.get('a').contains('Export HTTP').should('be.visible').click().url().should('include', '/publishing/exporthttpservers'); // Export HTTP page should display\ncy.get('h1').first().should('have.text', 'Export HTTP'); // Click on Publishing>> Packages\ncy.get('a').contains('Packages').should('be.visible').click().url().should('include', '/publishing/packages'); // Packages page should display\ncy.get('h1').first().should('have.text', 'Packages'); // Click on Publishing>>  Fed Auth Configuration\ncy.get('a').contains('Fed Auth Configuration').should('be.visible').click().url().should('include', '/publishing/fedauth'); // Fed Auth Configuration page should display\ncy.get('h1').first().should('have.text', 'Fed Auth Configuration'); // Click on Publishing>>  Filenames\ncy.get('a').contains('Filenames').should('be.visible').click().url().should('include', '/publishing/filenames'); // Filenames page should display\ncy.get('h1').first().should('have.text', 'Filenames'); // Click on Publishing>>  Import SMTP\ncy.get('a').contains('Import SMTP').should('be.visible').click().url().should('include', '/publishing/importsmtp'); // Import SMTP page should display\ncy.get('h1').first().should('have.text', 'Import SMTP'); // Click on Publishing>>  Import SFTP\ncy.get('a').contains('Import SFTP').should('be.visible').click().url().should('include', '/publishing/importsftp'); // Import SFTP page should display\ncy.get('h1').first().should('have.text', 'Import SFTP'); // Click on Publishing>>  Configuration\ncy.get('p-header').contains('Configuration').should('be.visible').click(); // click on Configuration>> DQM\ncy.get('a').contains('DQM').click({\n  force: true\n}); // DQM page should display\ncy.wait(_locators.default.shortWait);\ncy.url().should('include', '/configure/dqm');\ncy.get('h1').first().should('have.text', 'DQM'); // Click on Configuration>> WCM\ncy.get('a').contains('WCM').should('be.visible').click().url().should('include', '/configure/wcm'); // WCM page should display\ncy.get('h1').first().should('have.text', 'General WCM'); // Click on Configuration>> WCO\ncy.get('a').contains('WCO').should('be.visible').click().url().should('include', '/configure/wco'); // WCO page should display\ncy.get('h1').first().should('have.text', 'General WCO'); // Click on Configuration>> Search G2\ncy.get('a').contains('Search G2').should('be.visible').click().url().should('include', '/configure/generalsearchg2'); // Search G2 page should display\ncy.get('h1').first().should('have.text', 'Search G2'); // Click on Configuration>> DBaaS Hosts\ncy.get('a').contains('DBaaS Hosts').should('be.visible').click().url().should('include', '/configure/dbaashosts'); // DBaaS Hosts page should display\ncy.get('h1').first().should('have.text', 'DBaaS Hosts'); // Click on Configuration>> DBaaS Connections\ncy.get('a').contains('DBaaS Connections').should('be.visible').click().url().should('include', '/configure/dbaasconnections'); // DBaaS Connections page should display\ncy.get('h1').first().should('have.text', 'DBaaS Connections'); // Click on Configuration>> Authentication Settings\ncy.get('a').contains('Authentication Settings').should('be.visible').click().url().should('include', '/configure/auth'); // Authentication Settings page should display\ncy.get('h1').first().should('have.text', 'Authentication Settings'); // Click on Configuration>> Security\ncy.get('a').contains('Security').should('be.visible').click().url().should('include', '/configure/security'); // Security page should display\ncy.get('h1').first().should('have.text', 'Security'); // Click on Configuration>> Variables\ncy.get('a').contains('Variables').should('be.visible').click().url().should('include', '/configure/variables'); // System Variables page should display\ncy.get('h1').first().should('have.text', 'System Variables'); // Click on Configuration>> Password Expiration\ncy.get('a').contains('Password Expiration').should('be.visible').click().url().should('include', '/configure/passwordpolicy'); // Password Expiration page should display\ncy.get('h1').first().should('have.text', 'Password Expiration'); // Click on Configuration>> Output Views\ncy.get('a').contains('Output Views').should('be.visible').click().url().should('include', '/configure/outputviews'); // Output Views page should display\ncy.get('h1').first().should('have.text', 'Output Views'); // Click on Tools >>DBaaS Console\ncy.get('p-header').contains('Tools').should('be.visible').click();\ncy.get('a').contains('DBaaS Console').should('be.visible').click().url().should('include', '/tools/dbaas-console'); // DBaaS Console  page should display\ncy.get('h1').first().should('have.text', 'DBaaS Console'); // Click on Tools >>Recompile DBaaS Console\ncy.get('a').contains('Recompile').should('be.visible').click().url().should('include', '/tools/recompile'); // Recompile page should display\ncy.get('h1').first().should('have.text', 'Recompile'); // Click on Tools >>Clear link Cache\ncy.get('a').contains('Clear Link Cache').should('be.visible').click().url().should('include', '/tools/clearlinkcache'); // Clear link Cache page should display\ncy.get('h1').first().should('have.text', 'Clear Link Cache');\n/*\n1. Go to user icon on the top right side of page\n2. Click on Profile link\n*/\ncy.wait(_locators.default.wait);\ncy.log('**1. Go to user icon displayed on upper top right of page **');\ncy.get('#topbarUserMenuToggle').click();\ncy.log('**2. Click on Profile link **');\ncy.get('button').contains('Profile').click();\ncy.log('**Profile edit should display**'); // Edit Profile page should display\ncy.get('a').contains('Edit Profile').should('be.visible').url().should('include', '/account/profile');\ncy.get('h1').first().should('have.text', 'Edit Profile');",
              "err": {},
              "isRoot": false,
              "uuid": "d0394d0b-7af7-4e00-abe2-9c729cb221e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0394d0b-7af7-4e00-abe2-9c729cb221e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114425,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "48cc2336-ba98-4113-bfed-ec0dd1eade56",
          "title": "Site root should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Site root option: To verify user able to view site root option",
              "fullTitle": "Site root should  Site root option: To verify user able to view site root option",
              "duration": 161400,
              "state": "failed",
              "pass": false,
              "fail": true,
              "pending": false,
              "code": "cy.wait(_locators.default.shortWait); // *User click on content module from left hand side menu >> Goto File>> New>> Click on Site root\ncy.log('**User click on content module from left hand side menu >> Goto File>> New>> Click on Site root**');\ncy.get('div[title=\\'Content\\']').click();\ncy.wait(_locators.default.mediumWait);\nMenuPageObject.clickMenuItem(menuItem);\ncy.wait(_locators.default.wait);\nMenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\ncy.wait(_locators.default.wait); // MenuPageObject.clickMenuItem(menuItem);\n// cy.wait(Constants.shortWait)\n// MenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\n// cy.wait(Constants.shortWait)\nUtilityHelper.createSiteRoot(siteRootName); // cy.get('#topbarPublishingMenuToggle').click();\n// cy.wait(Constants.longWait)\n// cy.get('.publishingDropdown').should('be.visible');\n// cy.get('.publishingactivity > .cpDropdown > .header > .name').should('have.text', 'Activity Monitor Quickview');\n// cy.get(Constants.modelOptionInSubMenu_lnk).contains('Long Running Tasks').trigger('scroll');\n// cy.wait(Constants.wait)\n// cy.get('.taskName.ng-binding').contains('RebuildCLSite').should('be.visible');\n// cy.get('.taskName.ng-binding').contains('RebuildCLSite').prev().should('have.attr', 'class', 'statusColor session-success');\n// cy.get('.taskName.ng-binding').contains('FinishAddCL').should('be.visible');\n// cy.wait(Constants.wait);\n// cy.get('.taskName.ng-binding').contains('FinishAddCL').prev().should('have.attr', 'class', 'statusColor session-success');\n// cy.get('.taskName.ng-binding').contains('AddCL').should('be.visible');\n// //.wait(Constants.shortWait);\n// cy.get('.taskName.ng-binding').contains('AddCL').prev().should('have.attr', 'class', 'statusColor session-success');\n// Once the RebuildCLSite long running task is complete close the Activity Monitor by clicking anywhere.\ncy.log('**Once the RebuildCLSite long running task is complete close the Activity Monitor by clicking anywhere.**');\ncy.get('#panelContainerDrag-file-panel-widget').click();\ncy.get('.publishingDropdown').should('not.be.visible'); // });\n// Action: Select Publishing Smoke Tests folder.  If not on the first page continue on to second or third page to find folder\ncy.log('**Action: Select Publishing Smoke Tests folder.  If not on the first page continue on to second or third page to find folder.**'); // Click on filter  and search for Publishing Smoke tests folder\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(2000);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick');\ncy.wait(3000); // The folder should open and display _Assets, _Site Confi, Component Project folders and a Demo Page and Page assets.\ncy.log('The folder should open and display _Assets, _Site Confi, Component Project folders and a Demo Page and Page assets.');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('_Assets').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('_Site Config').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Demo Page').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Page').should('be.visible'); // })\n// it('Folder structure of Component Project Folder: To verify user able to view Component Project folder', () => {\ncy.log('**Action: Double click on Component folder**'); // Click on filter  and search for Publishing Smoke tests folder\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.log('**Component Project folder should open and display: Component Library, Filenames, Library, Models, Templates, Workflows folders.**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Library').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Filenames').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Library').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Models').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Workflows').should('be.visible'); // Action: Double click on Templates folder\ncy.log('**Action: Double click on Templates folder**'); // Click on filter  and search for Publishing Smoke tests folder\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').trigger('dblclick');\ncy.wait(_locators.default.mediumWait);\ncy.log('**Templates folder should open with various folders.**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Framework').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 No Footer Template').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template - Modified').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template - Zones').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun Wrapper').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun Wrapper No Footer').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('wysiwyg image test template').should('be.visible'); // Create new Template prompt: To verify user able to view new template\ncy.log('**Goto File >>New >> click on Template**');\nMenuPageObject.clickMenuItem(menuItem);\nMenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Template').trigger('mousemove').trigger('click');\ncy.log('**The Create Template prompt should come up.**');\ncy.get('p-header').should('have.text', 'Create Template ');\ncy.log('**Enter a new template name in text box**');\ncy.log('**Click on create**');\ncy.get('.control-label').should('have.text', 'Enter a new template name');\ncy.get('#projectInput').should('be.visible').trigger('click'); // Text should be in the text box\ncy.log('**Text should be in the text box.**');\ncy.get('#projectInput').type(templateFolderName); // cy.get('.btn-primary').click({force:true});\ncy.get('.ui-dialog-footer').should('be.visible').children('p-footer').children('button').last().click({\n  force: true\n});\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created ' + templateFolderName + '.');\ncy.wait(_locators.default.wait);\ncy.log('**Action: Double click on newly created Template folder**'); // Click on filter  and search for Publishing Smoke tests folder\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(templateFolderName).should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(templateFolderName).trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.log('**input.aspx and output.aspx folder should be present.**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('input.aspx').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('output.aspx').should('be.visible');\ncy.log(\"Action: Double click on input.aspx file**\");\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('input.aspx').trigger('dblclick');\ncy.log(\"**Input.aspx should open.**\");\ncy.wait(_locators.default.wait);\ncy.get('.background > .ng-binding').should('have.text', 'input.aspx');\ncy.wait(_locators.default.shortWait); //Insert code in input.aspx\ncy.log(\"**Open Input.aspx and insert drag and drop code **\"); // cy.get(':nth-child(5) > .CodeMirror-line > [role=\"presentation\"]').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(InputchangeExisting);\n// });\n// cy.get(':nth-child(9) > .CodeMirror-line > [role=\"presentation\"] > .cm-comment').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(inputcodeHeader)\n// });\ncy.get(':nth-child(1) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(2) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(3) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(4) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(5) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(6) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(7) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(8) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(9) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(10) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(11) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n}); //Save Input.aspx and validate the toast message    \ncy.log(\"**Validate Input.aspx Toast Message **\"); //cy.get('#contentModuleSave').click();\n// cy.get(Constants.toastNotificationMessage).should('have.text', 'Saved asset(s)');\ncy.location().then(function (loc) {\n  cy.log(loc.hash.substr(length - 6));\n  var assetId = loc.hash.substr(length - 6);\n  cy.request({\n    method: 'POST',\n    url: 'cpt_webservice/AccessAPI/asset/updatepluginbody/',\n    headers: {\n      \"Accept\": acceptHeader,\n      \"x-api-key\": apiKeyRC,\n      \"Content-Type\": contentTypeHeader,\n      \"Origin\": originHeader\n    },\n    body: {\n      \"assetId\": assetId,\n      \"body\": \"<%@ Page Language=\\\"C#\\\" Inherits=\\\"CrownPeak.Internal.Debug.InputInit\\\" %>\\r\\n<%@ Import Namespace=\\\"CrownPeak.CMSAPI\\\" %>\\r\\n<%@ Import Namespace=\\\"CrownPeak.CMSAPI.Services\\\" %>\\r\\n<!--DO NOT MODIFY CODE ABOVE THIS LINE-->\\r\\n<%@ Import Namespace=\\\"\\\"Component_Library.Component_Project.Components\\\" %>\\r\\n<% //MODIFY or ADD Import Statements to Define Namespaces Used by the Template %>\\r\\n<%//This plugin uses InputContext as its context class type%>\\r\\n<%\\r\\nInput.ShowDragDrop(\\\"Header Drag Drop Zone\\\", \\\"header\\\");\\r\\nInput.ShowDragDrop(\\\"Main Drag Drop Zone\\\", \\\"main\\\");\\r\\nInput.ShowDragDrop(\\\"Footer Drag Drop Zone\\\", \\\"footer\\\");\\r\\n// input.aspx: template file to specify content entry input form\\r\\n%>\\r\\n\",\n      \"requestCodeAnalysis\": false\n    }\n  });\n}); //Save Input.aspx and validate the toast message    \ncy.log(\"**Validate Input.aspx Toast Message **\"); //cy.get('#contentModuleSave').click();\n// cy.get(Constants.toastNotificationMessage).should('have.text', 'Compilation Succeeded');\n//cy.get(Constants.toastNotificationMessage).should('have.text', 'Saved asset(s)');\n//Close Input.aspx\ncy.log(\"**Close Input.aspx File **\");\ncy.get('button.tabCloseButton').click({\n  force: true\n}); //Double click and open Output.aspx\ncy.log(\"Action: Double click on output.aspx file**\");\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('output.aspx').trigger('dblclick'); // Open Output.aspx file\ncy.log(\"**Output.aspx should open.**\");\ncy.wait(_locators.default.wait);\ncy.get('.background > .ng-binding').should('have.text', 'output.aspx');\ncy.wait(_locators.default.shortWait); //Insert code in Output.aspx\ncy.log(\"**Open Output.aspx and insert drag and drop code **\"); // cy.get(':nth-child(5) > .CodeMirror-line > [role=\"presentation\"]').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(OutputChangeExisting);\n// });\n// cy.get(':nth-child(9) > .CodeMirror-line > [role=\"presentation\"] > .cm-comment').click().then($codeText => {\n//     $codeText.text('<%');\n//     $codeText.text(Outputcode)\n// });\ncy.get(':nth-child(1) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(2) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(3) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(4) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(5) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(6) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(7) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(8) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(9) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(10) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.get(':nth-child(11) > .CodeMirror-line').then(function ($Remove) {\n  //$changeComponentLibrary.text('')\n  $Remove.empty();\n});\ncy.location().then(function (loc) {\n  cy.log(loc.hash.substr(length - 6));\n  var assetId = loc.hash.substr(length - 6);\n  cy.request({\n    method: 'POST',\n    url: 'cpt_webservice/AccessAPI/asset/updatepluginbody/',\n    headers: {\n      \"Accept\": acceptHeader,\n      \"x-api-key\": apiKeyRC,\n      \"Content-Type\": contentTypeHeader,\n      \"Origin\": originHeader\n    },\n    body: {\n      \"assetId\": assetId,\n      \"body\": \"<%@ Page Language=\\\"C#\\\" Inherits=\\\"CrownPeak.Internal.Debug.OutputInit\\\" %>\\r\\n<%@ Import Namespace=\\\"CrownPeak.CMSAPI\\\" %>\\r\\n<%@ Import Namespace=\\\"CrownPeak.CMSAPI.Services\\\" %>\\r\\n<!--DO NOT MODIFY CODE ABOVE THIS LINE-->\\r\\n<%@ Import Namespace=\\\"\\\"Component_Library.Component_Project.Components\\\" %>\\r\\n<% //MODIFY or ADD Import Statements to Define Namespaces Used by the Template %>\\r\\n<%//This plugin uses OutputContext as its context class type%>\\r\\n<% \\r\\n   // output.aspx: template file to specify the published content in site HTML\\r\\n   // if no preview.aspx exists, then this is used by default for preview\\r\\n %>\\r\\n<% Out.ShowDragDrop(\\\"header\\\"); %>\\r\\n<% Out.ShowDragDrop(\\\"main\\\"); %>\\r\\n<% Out.ShowDragDrop(\\\"footer\\\"); %>\\r\\n\",\n      \"requestCodeAnalysis\": false\n    }\n  });\n}); //Save Output.aspx and validate the toast message    \ncy.log(\"**Validate Output.aspx Toast Message **\"); // cy.get('#contentModuleSave').click();\n// cy.get(Constants.toastNotificationMessage).should('have.text', 'Compilation Succeeded');\n//need to check toast message****\n//Close Output.aspx\ncy.log(\"**Close Output.aspx File **\");\ncy.get('button.tabCloseButton').click({\n  force: true\n}); // Back to site root folder\ncy.log(\"**Validate or go back to site Root folder **\");\ncy.get('div[title=\\'Content\\']').click(); //Search for created site root\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick');\ncy.wait(_locators.default.wait); //Double click on Component folder\ncy.log('**Action: Double click on Component folder**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').trigger('dblclick'); //click on double click on templates folder\ncy.log('**Action: Double click on Templates folder**');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').trigger('dblclick'); //Click on double down arrows and select the Site Root folder\ncy.log('**Click on double down arrows and select the  Site Root folder**');\ncy.get('.crumbsDropdownToggleButton').click({\n  force: true\n});\ncy.get('span.ng-binding').contains(siteRootName).click({\n  force: true\n}); //click on root folder\ncy.get('div.root.inside').click({\n  force: true\n}); //Navigate to site root project again          \nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick');\ncy.wait(_locators.default.wait); // Verify the display of varios files\n//********\ncy.log('**Verify the display of various files**');\ncy.get('.crumbsLink.ng-binding').contains(siteRootName).should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('_Assets').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('_Site Config').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Demo Page').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Page').should('be.visible'); //Prompt to create Template Wrong Test case\ncy.log(\"**Prompt to create Template**\"); // Back to site root folder\ncy.log(\"**Validate or go back to site Root folder **\");\ncy.get('div[title=\\'Content\\']').click(); //Navigate to site root project again          \ncy.log(\"**Searched for Site root **\");\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick');\ncy.wait(_locators.default.wait); //Double click on Component folder\ncy.log('**Action: Double click on Component folder**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').trigger('dblclick'); //click on double click on templates folder\ncy.log('**Action: Double click on Templates folder**');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').trigger('dblclick');\ncy.wait(_locators.default.wait); // click on file->New and check \nMenuPageObject.clickMenuItem(menuItem);\nMenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Template').trigger('mousemove').trigger('click'); // Validate create template pop-up opens\ncy.log('**Check Template Pop-up open up**');\ncy.get('div[role=dialog]', {\n  timeout: _locators.default.wait\n}).should('be.visible');\ncy.get('p-header').should('contain', 'Create Template');\ncy.get('.btn-default').click(); //Validate File Name\n// Back to site root folder\ncy.log(\"**Validate or go back to site Root folder **\");\ncy.get('div[title=\\'Content\\']').click(); //Navigate to site root project again          \ncy.log(\"**Searched for Site root **\");\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick');\ncy.wait(_locators.default.wait); //  //Create new Asset\ncy.log(\"**Create New Assets**\");\nMenuPageObject.clickMenuItem(menuItem);\nMenuPageObject.clickSubMenuItem(menuItem, subMenuItem);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('File').trigger('mousemove').trigger('click'); //Verify the Prompt Header\ncy.log(\"**Verify the Header of Prompt **\");\ncy.get('p-header').should('contain', 'Create New'); //input the new File name in input box and verify the file path\ncy.log(\"**Input the File Name or Asset Name and verify the path **\");\ncy.get('#label').type(FileName);\ncy.get('.new-file-name-input > span').should('have.text', 'Path: /' + siteRootName + ''); //click on Browse button and select the Created Template\ncy.log(\"**Click on Browse button To select Template**\");\ncy.get('button.btn.btn-primary:contains(\\'Browse\\')').trigger('click');\ncy.wait(_locators.default.wait);\ncy.log(\"**Select The created Template and verify the path**\");\ncy.get('asset-browser.ng-star-inserted > .head > .assetRow > .assetLabel > .assetLabelLink').click();\ncy.get('a.assetLabelLink.ng-binding').contains(templateFolderName).click({\n  force: true\n});\ncy.get('button').contains('OK').click();\ncy.get('span.new-file-template-path').should('have.text', 'Path: /' + siteRootName + '/Component Project/Templates/' + templateFolderName + ''); //select the workflow and click on Create button\ncy.log(\"**Click on Create button to create new Asset **\");\ncy.get('select').select('Basic Workflow');\ncy.wait(_locators.default.wait);\ncy.get('button.btn.btn-primary').contains('Create').click();\ncy.wait(_locators.default.wait); // Validate Success Message\ncy.log(\"**Validate Success Message **\");\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created asset ' + FileName + '.'); // Root icon\n// Back to site root folder\ncy.log(\"**Validate or go back to site Root folder **\");\ncy.get('div[title=\\'Content\\']').click(); // cy.get('div.root.inside').click({ force: true })\n//Navigate to site root project again and search for the created site root         \ncy.log(\"**Searched for Site root **\");\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick', {\n  force: true\n});\ncy.wait(_locators.default.wait); //Navigate to Site root\n// it('Folder structure of Component Project Folder: To verify user able to view Component Project folder', () => {\ncy.log('**Action: Double click on Component folder**'); // Click on filter  and search for Publishing Smoke tests folder\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Project').trigger('dblclick');\ncy.wait(_locators.default.wait);\ncy.log('**Component Project folder should open and display: Component Library, Filenames, Library, Models, Templates, Workflows folders.**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Library').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Filenames').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Library').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Models').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Workflows').should('be.visible'); // Action: Double click on Templates folder\ncy.log('**Action: Double click on Templates folder**'); // Click on filter  and search for Publishing Smoke tests folder\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Templates').trigger('dblclick');\ncy.wait(_locators.default.mediumWait);\ncy.log('**Templates folder should open with various folders.**');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Component Framework').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 No Footer Template').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template - Modified').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun v3 Template - Zones').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun Wrapper').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('Summer of Fun Wrapper No Footer').should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains('wysiwyg image test template').should('be.visible'); // Open the created template\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(templateFolderName).should('be.visible');\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(templateFolderName).trigger('click'); //\n// Back to site root folder\ncy.log(\"**Validate or go back to site Root folder **\");\ncy.get('div[title=\\'Content\\']').click(); // cy.get('div.root.inside').click({ force: true })\n//Navigate to site root project again and search for the created site root         \ncy.log(\"**Searched for Site root **\");\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(siteRootName).trigger('dblclick', {\n  force: true\n});\ncy.wait(_locators.default.wait); // Double click on the Created Asset\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(FileName).should('be.visible');\ncy.wait(_locators.default.wait);\ncy.get(_locators.default.siteRootAssetsName_lnk).contains(FileName).trigger('dblclick', {\n  force: true\n});\ncy.wait(_locators.default.wait); // Goto View click on Content Blocks\nMenuPageObject.clickMenuItem(\"View\");\nUtilityHelper.toggleViewSubMenuItem(\"View\", \"Content Blocks\", _locators.default.dockablePanelContentBlock_tab);\ncy.get('#contentModuleInline').click({\n  force: true\n});\ncy.wait(_locators.default.shortWait); // UtilityHelper.verifyDockablepanelPresence('Content Blocks');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: ':nth-child(2) > .CodeMirror-line', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: ':nth-child(2) > .CodeMirror-line', but never found it.\n    at Object.cypressErr (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:82944:11)\n    at Object.throwErr (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:82909:18)\n    at Object.throwErrByPath (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:82936:17)\n    at retry (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:76454:16)\n    at https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:68529:18\n    at tryCatcher (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:131381:23)\n    at Promise._settlePromiseFromHandler (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:129399:31)\n    at Promise._settlePromise (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:129456:18)\n    at Promise._settlePromise0 (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:129501:10)\n    at Promise._settlePromises (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:129576:18)\n    at Async._drainQueue (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:126305:16)\n    at Async._drainQueues (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:126315:10)\n    at Async.drainQueues (https://rc.crownpeak.com/__cypress/runner/cypress_runner.js:126189:14)\n    at <anonymous>"
              },
              "isRoot": false,
              "uuid": "dec3ccf2-3f5f-4f96-a797-0eaa2f960e7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dec3ccf2-3f5f-4f96-a797-0eaa2f960e7b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 161400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b57b1fdd-1347-453f-80bb-40760d73e5f8",
          "title": "Dockable Panel should ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Dockable Panel option: To verify user able to view Dockable Panel options",
              "fullTitle": "Dockable Panel should  Dockable Panel option: To verify user able to view Dockable Panel options",
              "duration": 146332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "code": "//Create SiteRoot\ncy.wait(_locators.default.wait);\ncy.get('.module.content').should('be.visible').click({\n  force: true\n});\ncy.wait(_locators.default.wait); //Open File Menu and check New->Sub menu items are displaying\nMenuPageObject.clickMenuItem(menuItemFile);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('New').trigger('mouseover').should('be.visible');\ncy.wait(_locators.default.shortWait);\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').trigger('mousemove');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Site Root').click({\n  force: true\n}); // The Create Site Root prompt should come up.\ncy.log('**The Create Site Root prompt should come up.**');\ncy.get('p-header').should('have.text', 'Create Site Root '); // Enter New site root name in textbox\ncy.log('**Enter New site root name in textbox**');\ncy.get('#siteRootInput').should('be.visible').trigger('click'); // Text should be in the text box.\ncy.log('**Text should be in the text box.**');\ncy.get('#siteRootInput').type(siteRootName); // Click on Install Component Project using Component Library 2.1 checkbox\ncy.log('**Click on Install Component Project using Component Library 2.1 checkbox**');\ncy.get('div.checkbox').should('be.visible');\ncy.get('div.checkbox').children('label').should('have.text', 'Install Component Project using Component Library 2.1');\ncy.get('div.checkbox').click(); // A check mark should appear in the box and two more options should appear\ncy.log('**A check mark should appear in the box and two more options should appear**');\ncy.get('.checkbox.ng-star-inserted').should('have.length', 2);\ncy.get('.checkbox.ng-star-inserted > label').first().should('have.text', 'Install Samples');\ncy.get('.checkbox.ng-star-inserted > label').first().children('input').should('be.checked');\ncy.get('.checkbox.ng-star-inserted > label').last().should('have.text', 'Rebuild Site After Creation ');\ncy.get('.checkbox.ng-star-inserted > label').last().children('input').should('be.checked'); // Click on save button\ncy.log('**Click on save button**');\ncy.get('.ui-dialog-footer').should('be.visible').children('p-footer').children('button').last().click({\n  force: true\n}); // A notification should come up stating that the Site Root is created.\ncy.log('**A notification should come up stating that the Site Root is created.**');\ncy.get(_locators.default.toastNotificationMessage).should('have.text', 'Created site root ' + siteRootName + '.');\nMenuPageObject.clickMenuItem(menuItem);\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('File View').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Information').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Conversation').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Content Blocks').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Digital Asset Management').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('WCO Targeting').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('WCO Reporting').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('WCO Testing').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Digital Quality Management').should('be.visible');\ncy.get(_locators.default.modelOptionInSubMenu_lnk).contains('Properties').should('be.visible'); //To verify the File view option under dockable panel (File View option in Dockable Panel)\ncy.log('**File View option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('File View'); //To verify that user can add File view panel (Add File View panel)\ncy.log('**Add File View panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'File View', _locators.default.dockablePanelFile_tab); //Search for created SiteRoot and open it\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.shortWait); //To verify the Information option under dockable panel (Information option in Dockable Panel)\ncy.log('**Information option in Dockable Panel**');\nMenuPageObject.clickMenuItem(menuItem);\nUtilityHelper.verifyDockablepanelPresence('Information'); //To verify that user can add Info panel (Add Information panel)\ncy.log('**Add Information panel**'); // MenuPageObject.clickMenuItem(menuItem);\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Information', _locators.default.dockablePanelInformation_tab); //To verify the Conversation option under dockable panel (Conversation option in Dockable Panel)\ncy.log('**Conversation option in Dockable Panel**');\nMenuPageObject.clickMenuItem(menuItem);\nUtilityHelper.verifyDockablepanelPresence('Conversation');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels'); //To verify that user can add Conversation panel (Add Conversation panel)\n//MenuPageObject.clickMenuItem(menuItem);\ncy.log('**Add Conversation panel**');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'File View', _locators.default.dockablePanelFile_tab);\ncy.wait(_locators.default.shortWait);\nUtilityHelper.searchSiteRoot(siteRootName, _locators.default.wait);\ncy.get('.assetLabelLink.ng-binding').contains(siteRootName).should('be.visible');\ncy.wait(_locators.default.shortWait);\ncy.get('.assetLabelLink.ng-binding').contains(siteRootName).trigger('dblclick');\ncy.wait(_locators.default.shortWait);\ncy.get('.assetLabelLink.ng-binding').contains('Demo Page').should('be.visible').trigger('dblclick'); // cy.get('#panelContainerDrag-conversations-panel-widget').contains('Conversation').trigger('click');\nMenuPageObject.clickMenuItem(menuItem);\nUtilityHelper.verifyDockablepanelPresence('Conversation');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Conversation', _locators.default.dockablePanelConversations_tab); //To verify that user can add any message within the Conversation panel for the previewed asset (Message in Conversation Panel)\ncy.log('**Message in Conversation Panel**');\ncy.wait(_locators.default.shortWait);\ncy.get('.input-message-footer > .ng-pristine').click({\n  force: true\n});\ncy.get('.input-message-footer > .ng-pristine').type('Hello{enter}', {\n  force: true\n}); //cy.get('.conversations-body.ng-binding').contains('Hello').should('be.true'); need to check\ncy.get('div.conversations-body.ng-binding').should('have.text', 'Hello'); //To verify the Content blocks option under dockable panel (Content Blocks option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\nUtilityHelper.verifyDockablepanelPresence('Content Blocks'); //To verify that user can add Conversation panel (Add Conversation panel)\ncy.log('**Add Conversation panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Content Blocks', _locators.default.dockablePanelContentBlock_tab); //To verify the Digital Asset Management option under dockable panel (Digital Asset Management option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**Digital Asset Management option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('Digital Asset Management'); //To verify that user can add DAM panel (Add DAM panel)\ncy.log('**Add Digital Asset Management panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Digital Asset Management', _locators.default.dockablePanelDigitalAssetManagement_tab); //To verify the WCO Targeting option under dockable panel (WCO Targeting option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**WCO Targeting option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('WCO Targeting'); //To verify that user can add WCO Targeting (Add WCO Targeting  panel)\ncy.log('**Add WCO Targeting panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'WCO Targeting', _locators.default.dockablePanelWCOTargeting_tab); //To verify the WCO Reporting option under dockable panel (WCO Reporting option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**WCO Reporting option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('WCO Reporting'); //To verify that user can add WCO Reporting (Add WCO Reporting  panel)\ncy.log('**Add WCO Reporting panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'WCO Reporting', _locators.default.dockablePanelWCOReporting_tab); //To verify the WCO Testing option under dockable panel (WCO Testing option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**WCO Testing option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('WCO Testing'); //To verify that user can add WCO Testing (Add WCO Testing  panel)\ncy.log('**Add WCO Testing panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'WCO Testing', _locators.default.dockablePanelWCOTesting_tab); //To verify the Digital Quality Management option under dockable panel (Digital Quality Management option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**Digital Quality Management option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('Digital Quality Management'); //To verify that user can add WCO Digital Quality Management (Add Digital Quality Management  panel)\ncy.log('**Add Digital Quality Management panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Digital Quality Management', _locators.default.dockablePanelDigitalQualityManagement_tab); //To verify the Properties option in Dockable Panel option under dockable panel (Properties option in Dockable Panel option in Dockable Panel)\nMenuPageObject.clickMenuItem(menuItem);\ncy.log('**Properties option in Dockable Panel option in Dockable Panel**');\nUtilityHelper.verifyDockablepanelPresence('Properties'); //To verify that user can add Properties Panel (Add Properties  panel)\ncy.log('**Add Properties panel**');\ncy.get(_locators.default.dockablePanel_lbl).should('have.text', 'Dockable Panels');\nUtilityHelper.toggleViewSubMenuItem(menuItem, 'Properties', _locators.default.dockablePanelProperties_tab);\ncy.wait(_locators.default.wait);",
              "err": {},
              "isRoot": false,
              "uuid": "1ba04fd8-08aa-4ca4-8eca-ea77e4eb8c47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ba04fd8-08aa-4ca4-8eca-ea77e4eb8c47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 146332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "duration": 1314962,
      "root": true,
      "rootEmpty": true,
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "_timeout": 2000
    },
    "copyrightYear": 2019
  }
  